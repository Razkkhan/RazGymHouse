{"ast":null,"code":"var _jsxFileName = \"D:\\\\vs code\\\\assignment 88\\\\src\\\\components\\\\Body\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Body.css';\nimport Card from '../Card/Card';\nimport ListOrder from '../ListOrder/ListOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalItem = () => {\n  let listItem = localStorage.getItem('time');\n\n  if (listItem) {\n    return JSON.parse(localStorage.getItem('time'));\n  } else {\n    return [];\n  }\n};\n\nconst Body = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [listOrder, setListOrder] = useState([]);\n  const [BreakTime, setBreakTime] = useState(getLocalItem(0));\n  useEffect(() => {\n    fetch('data.json').then(res => res.json()).then(fakeData => setData(fakeData));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('time', JSON.stringify(BreakTime));\n  }, [BreakTime]);\n\n  const handleBreakTime = second => {\n    setBreakTime(second);\n  };\n\n  const handleAddButton = props => {\n    const newList = [...listOrder, props];\n    setListOrder(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: data.map(data => /*#__PURE__*/_jsxDEV(Card, {\n        cart: data,\n        handleAddButton: handleAddButton\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: /*#__PURE__*/_jsxDEV(ListOrder, {\n        handleBreakTime: handleBreakTime,\n        BreakTime: BreakTime,\n        listOrder: listOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Body, \"5jrjcHIZ0xvBUu232hkOgbgspEM=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useEffect","useState","Card","ListOrder","getLocalItem","listItem","localStorage","getItem","JSON","parse","Body","data","setData","listOrder","setListOrder","BreakTime","setBreakTime","fetch","then","res","json","fakeData","setItem","stringify","handleBreakTime","second","handleAddButton","props","newList","map","id"],"sources":["D:/vs code/assignment 88/src/components/Body/Body.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Body.css'\r\nimport Card from '../Card/Card';\r\nimport ListOrder from '../ListOrder/ListOrder';\r\n\r\n\r\n\r\nconst getLocalItem = () =>{\r\n    let listItem = localStorage.getItem('time')\r\n    if(listItem){\r\n        return JSON.parse(localStorage.getItem('time'))\r\n    } else{\r\n        return []\r\n    }\r\n}\r\nconst Body = () => {\r\n    const [data, setData] = useState([]);\r\n    const [listOrder, setListOrder] = useState([]);\r\n    const [BreakTime, setBreakTime] = useState(getLocalItem(0)); \r\n    useEffect(()=>{\r\n        fetch('data.json')\r\n        .then(res => res.json())\r\n        .then(fakeData => setData(fakeData)\r\n        )\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('time',JSON.stringify(BreakTime))\r\n    },[BreakTime])\r\n\r\n    const handleBreakTime = (second) => {\r\n        setBreakTime(second)\r\n    }\r\n\r\n    const handleAddButton = (props) =>{\r\n        const newList = [...listOrder, props]\r\n        setListOrder(newList)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n    \r\n            <div className=\"card-container\">\r\n               \r\n            {\r\n                data.map(data => <Card cart={data} key={data.id} handleAddButton={handleAddButton}></Card>)\r\n            }\r\n            </div>\r\n            <div className=\"list-container\">\r\n            <ListOrder handleBreakTime={handleBreakTime} BreakTime={BreakTime} listOrder={listOrder}></ListOrder>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Body;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAIA,MAAMC,YAAY,GAAG,MAAK;EACtB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;;EACA,IAAGF,QAAH,EAAY;IACR,OAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;EACH,CAFD,MAEM;IACF,OAAO,EAAP;EACH;AACJ,CAPD;;AAQA,MAAMG,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACG,YAAY,CAAC,CAAD,CAAb,CAA1C;EACAJ,SAAS,CAAC,MAAI;IACViB,KAAK,CAAC,WAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,QAAQ,IAAIT,OAAO,CAACS,QAAD,CAFzB;EAIH,CALQ,EAKP,EALO,CAAT;EAOArB,SAAS,CAAC,MAAI;IACVM,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA4Bd,IAAI,CAACe,SAAL,CAAeR,SAAf,CAA5B;EACH,CAFQ,EAEP,CAACA,SAAD,CAFO,CAAT;;EAIA,MAAMS,eAAe,GAAIC,MAAD,IAAY;IAChCT,YAAY,CAACS,MAAD,CAAZ;EACH,CAFD;;EAIA,MAAMC,eAAe,GAAIC,KAAD,IAAU;IAC9B,MAAMC,OAAO,GAAG,CAAC,GAAGf,SAAJ,EAAec,KAAf,CAAhB;IACAb,YAAY,CAACc,OAAD,CAAZ;EACH,CAHD;;EAKA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBAEI;MAAK,SAAS,EAAC,gBAAf;MAAA,UAGIjB,IAAI,CAACkB,GAAL,CAASlB,IAAI,iBAAI,QAAC,IAAD;QAAM,IAAI,EAAEA,IAAZ;QAAgC,eAAe,EAAEe;MAAjD,GAAuBf,IAAI,CAACmB,EAA5B;QAAA;QAAA;QAAA;MAAA,QAAjB;IAHJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQI;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACA,QAAC,SAAD;QAAW,eAAe,EAAEN,eAA5B;QAA6C,SAAS,EAAET,SAAxD;QAAmE,SAAS,EAAEF;MAA9E;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAtCD;;GAAMH,I;;KAAAA,I;AAwCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}